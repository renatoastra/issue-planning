datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
      relationMode = "prisma"
}


generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialActions"] // You won't need this in Prisma 3.X or higher.

}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  rooms         Room[]
  votes         Votes[]
  roomUsers          Room[]    @relation("RoomUsers")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Room {
    id                String  @id @default(cuid())
    title String?
    link String?
    description    String?
    createdAt   DateTime @default(now())
    status      String?
    createdById String
    timer      DateTime?
    user  User @relation(fields: [createdById], references: [id])
    users User[] @relation("RoomUsers")
    votes Votes[]
    @@index([createdById])
}

model Votes {
    id       String  @id @default(cuid())
    value    String?
    createdAt   DateTime @default(now())
    roomId String
    userId String

    room       Room @relation(fields: [roomId], references: [id])
    user       User @relation(fields: [userId], references: [id])
    @@index([userId])
    @@index([roomId])
}